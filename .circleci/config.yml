aliases:
  # Cache management
  - &restore-cache-gradle
    keys:
      - jars-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
  - &save-cache-gradle
    paths:
      - ~/.gradle
    key: jars-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
  - &restore-cache-android-ndk
    keys:
      - android-ndk-{{ arch }}-r12b-32-64
  - &save-cache-android-ndk
    paths:
      - /opt/android-ndk
    key: android-ndk-{{ arch }}-r12b-32-64

  # Android NDK
  - &create-android-ndk-directory
    name: Create Android NDK Directory
    command: |
      if [[ ! -e /opt/android-ndk ]]; then
        sudo mkdir /opt/android-ndk
      fi
      sudo chown ${USER:=$(/usr/bin/id -run)}:$USER /opt/android-ndk

  - &install-android-ndk
    |
      scripts/install-android-ndk.sh

version: 2
jobs:
  build:
    working_directory: ~/jnienv
    docker:
      - image: circleci/android:api-25-alpha
    resource_class: "large"
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:+HeapDumpOnOutOfMemoryError"'
      ANDROID_NDK_HOME: '/opt/android-ndk/r12b'
      BUILD_THREADS: 2
    steps:
      - checkout

      # Install Android NDK
      - run: *create-android-ndk-directory
      - restore-cache: *restore-cache-android-ndk
      - restore-cache: *restore-cache-gradle
      - run: *install-android-ndk
      - save-cache: *save-cache-android-ndk
      - save-cache: *save-cache-gradle

      # Build library
      - run:
          name: Build library
          command: ./gradlew library:assemble
